#####################
# BASIC CONFIGURATION
#####################

# source hosting (remote server)
src_unixuser="monsite" # SSH username
src_dbname="$src_unixuser"
src_site_host="www.$src_unixuser.com"
src_files_root="/home/$src_unixuser/www";

# destination hosting (local server)
dst_dbname="$src_unixuser"
dst_site_host="$src_site_host"
dst_files_root="/home/$src_unixuser/www";

########################
# ADVANCED CONFIGURATION
########################

# copy source files into destination
sync_src+=("$src_files_root")
sync_dst+=("$dst_files_root")

# source hosting (remote server)
src_site_protocol="http://"
src_root_slug=""
src_server="$src_site_host"
src_ssh_port="22"
src_hostname="localhost" # as seen from $src_server
src_port=""
src_dbuser=""
src_dbpass=""

# destination hosting (local server)
dst_site_protocol="$src_site_protocol"
dst_root_slug=""
dst_hostname="localhost" # "127.0.0.1" sur certains hébergements
dst_port=""
dst_dbuser=""
dst_dbpass=""

# replace source URL with remote one in database
replace_src+=("${src_site_protocol}www.${src_site_host}${src_root_slug}")
replace_dst+=("${dst_site_protocol}${dst_site_host}${dst_root_slug}")

replace_src+=("${src_site_protocol}${src_site_host}${src_root_slug}")
replace_dst+=("${dst_site_protocol}${dst_site_host}${dst_root_slug}")

# replace source PATH with remote one in database
replace_src+=("$src_files_root")
replace_dst+=("$dst_files_root")

# chercher-remplacer : procédures stockées (requiert de bien remplir les variables $src_dbuser, $src_hostname, $dst_dbuser et $dst_hostname)
# sur certains hébergements, le chercher-remplacer marchera avec 'localhost' mais pas avec '127.0.0.1'
replace_src+=(" DEFINER=\`$src_dbuser\`@\`$src_hostname\`")
replace_dst+=(" DEFINER=\`$dst_dbuser\`@\`$dst_hostname\`")

# replace source HOSTNAME with remote one in database
replace_src+=("www.$src_site_host")
replace_dst+=("$dst_site_host")

replace_src+=("$src_site_host")
replace_dst+=("$dst_site_host")

# sync options
resilient_replace_options=""            # additionnal options for resilient_replace
src_type="remote_base"                  # get database from: local_file | local_base | remote_file | remote_base
src_file="/path/to/dbname.sql.gz"       # if $src_type is a file ("local_file" or "remote_file") please provide the full path to the file
compress=1                              # if $src_type is "local_base" or "remote_base", compress data on-the-fly
                                        # if $src_type is "local_file" or "remote_file", handle compressed file

# ignore database tables
sql_ignores="--ignore-table=$src_dbname.table_a_ignorer_1 --ignore-table=$src_dbname.table_a_ignorer_2"

# mysqldump options
sql_options_structure="--default-character-set=utf8 "
sql_options="$sql_options_structure --routines "

# transfer options, directories to ignore...
rsync_options="-uvrpzl --exclude /sitesync/ --exclude /stats/ --exclude .DS_Store "

# path to tools
src_path_to_mysqldump=mysqldump
dst_path_to_mysqldump=mysqldump
dst_path_to_mysql=mysql
dst_path_to_rsync=rsync
dst_path_to_php="env php -qn"
dst_path_to_resilient_replace="bin/resilient_replace"
logfile="log/sitesync.log"

# you can run scripts before and after database import by putting them in:
# ./hook/before/*.sh
# ./hook/after/*.sh

# vim: filetype=sh
